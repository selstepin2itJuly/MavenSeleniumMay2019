<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="30005" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:37Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="30005" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:37Z">
      <class name="testcases.RegressionTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases.RegressionTest@29774679]" name="beforeSuite" is-config="true" duration-ms="9" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testcases.RegressionTest@29774679]" name="beforeTest" is-config="true" duration-ms="2" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases.RegressionTest@29774679]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.RegressionTest@29774679]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="functionThree()[pri:0, instance:testcases.RegressionTest@29774679]" name="functionThree" duration-ms="5" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionThree -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.RegressionTest@29774679]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.RegressionTest@29774679]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="functionOne()[pri:1, instance:testcases.RegressionTest@29774679]" name="functionOne" duration-ms="2" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionOne -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.RegressionTest@29774679]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.RegressionTest@29774679]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="functionTwo()[pri:2, instance:testcases.RegressionTest@29774679]" name="functionTwo" duration-ms="1" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionTwo -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases.RegressionTest@29774679]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.RegressionTest@29774679]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testcases.RegressionTest@29774679]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-05-26T19:02:37Z" finished-at="2019-05-26T19:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases.RegressionTest@29774679]" name="afterSuite" is-config="true" duration-ms="1" started-at="2019-05-26T19:02:37Z" finished-at="2019-05-26T19:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.RegressionTest -->
      <class name="testcases.LoginTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="5393" started-at="2019-05-26T19:02:07Z" finished-at="2019-05-26T19:02:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginTestPositive()[pri:11, instance:testcases.LoginTest@3ffc5af1]" name="LoginTestPositive" duration-ms="3990" started-at="2019-05-26T19:02:12Z" description="Successfull login" finished-at="2019-05-26T19:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestPositive -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="758" started-at="2019-05-26T19:02:16Z" finished-at="2019-05-26T19:02:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="4731" started-at="2019-05-26T19:02:17Z" finished-at="2019-05-26T19:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginTestNegativeUser()[pri:12, instance:testcases.LoginTest@3ffc5af1]" name="LoginTestNegativeUser" duration-ms="446" started-at="2019-05-26T19:02:22Z" description="Wrong user login" finished-at="2019-05-26T19:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestNegativeUser -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="778" started-at="2019-05-26T19:02:22Z" finished-at="2019-05-26T19:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="5756" started-at="2019-05-26T19:02:23Z" finished-at="2019-05-26T19:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginTestNegativePass()[pri:13, instance:testcases.LoginTest@3ffc5af1]" name="LoginTestNegativePass" duration-ms="950" started-at="2019-05-26T19:02:29Z" description="Wrong password login" finished-at="2019-05-26T19:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestNegativePass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="752" started-at="2019-05-26T19:02:30Z" finished-at="2019-05-26T19:02:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="4661" started-at="2019-05-26T19:02:31Z" finished-at="2019-05-26T19:02:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="FailDelibrately()[pri:14, instance:testcases.LoginTest@3ffc5af1]" name="FailDelibrately" duration-ms="1008" started-at="2019-05-26T19:02:35Z" description="Failing login" finished-at="2019-05-26T19:02:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testcases.LoginTest.FailDelibrately(LoginTest.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailDelibrately -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.LoginTest@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="741" started-at="2019-05-26T19:02:36Z" finished-at="2019-05-26T19:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
